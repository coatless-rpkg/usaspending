% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform-api.R
\name{flatten_tibble}
\alias{flatten_tibble}
\title{Flatten a Nested Tibble Structure}
\usage{
flatten_tibble(df)
}
\arguments{
\item{df}{A tibble containing potentially nested structures such as:
\itemize{
\item Lists of consistent data (converted to new tibble columns)
\item Simple lists of scalars (unlisted into atomic vectors)
\item Complex nested structures (flattened with column name prefixes)
\item Nested data frames (preserved as list-columns)
}}
}
\value{
A tibble where:
\itemize{
\item Nested structures are flattened where possible
\item Column names for flattened data use parent_child format
\item Complex structures that cannot be safely flattened remain as list-columns
\item Original column order is preserved for non-nested columns
}
}
\description{
Attempts to flatten complex nested structures within a tibble into a simpler format
while preserving data relationships. This function handles various types of nested
data intelligently, either by flattening where possible or preserving structure
where flattening would cause data loss.
}
\note{
The function employs different strategies based on the nested data:
\itemize{
\item Consistent nested lists are converted to tibbles
\item Simple scalar lists are unlisted to vectors
\item Complex structures are flattened with prefixed column names
\item Data frames are preserved as list-columns to maintain their structure
}
}
\keyword{internal}
